// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Click send image renders correctly 1`] = `
Array [
  <View
    accessibilityRole="tablist"
    id="change"
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flexDirection": "row",
          "position": "relative",
        },
        Object {
          "backgroundColor": "#2089dc",
        },
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "borderRadius": 3,
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 3,
          },
          Array [
            Object {
              "borderRadius": 0,
              "flex": 1,
            },
            Object {
              "backgroundColor": "rgba(202, 113, 235, 0.2)",
            },
            Object {
              "backgroundColor": "white",
            },
          ],
          false,
        ]
      }
    >
      <View
        accessibilityRole="tab"
        accessibilityState={
          Object {
            "disabled": false,
            "selected": true,
          }
        }
        accessibilityValue={
          Object {
            "text": "My Patients",
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#2089dc",
              "borderRadius": 0,
              "borderWidth": 0,
              "flexDirection": "column",
              "justifyContent": "center",
              "padding": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#3743ab",
                  "fontSize": 12,
                },
                Object {
                  "marginBottom": 6,
                },
                Object {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#3743ab",
                "fontSize": 12,
                "paddingHorizontal": 16,
                "paddingVertical": 2,
                "textAlign": "center",
                "textTransform": "uppercase",
              }
            }
          >
            My Patients
          </Text>
        </View>
      </View>
    </View>
    <View
      style={
        Array [
          Object {
            "borderRadius": 3,
            "overflow": "hidden",
          },
          Object {
            "borderRadius": 3,
          },
          Array [
            Object {
              "borderRadius": 0,
              "flex": 1,
            },
            Object {
              "backgroundColor": "transparent",
            },
            Object {
              "backgroundColor": "white",
            },
          ],
          false,
        ]
      }
    >
      <View
        accessibilityRole="tab"
        accessibilityState={
          Object {
            "disabled": false,
            "selected": false,
          }
        }
        accessibilityValue={
          Object {
            "text": "Patient Request",
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#2089dc",
              "borderRadius": 0,
              "borderWidth": 0,
              "flexDirection": "column",
              "justifyContent": "center",
              "padding": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            selectable={false}
            style={
              Array [
                Object {
                  "color": "#3743ab",
                  "fontSize": 12,
                },
                Object {
                  "marginBottom": 6,
                },
                Object {
                  "fontFamily": "FontAwesome5Free-Solid",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {
                  "fontWeight": "900",
                },
              ]
            }
          >
            
          </Text>
          <Text
            style={
              Object {
                "color": "#3743ab",
                "fontSize": 12,
                "paddingHorizontal": 16,
                "paddingVertical": 2,
                "textAlign": "center",
                "textTransform": "uppercase",
              }
            }
          >
            Patient Request
          </Text>
        </View>
      </View>
    </View>
    <View
      collapsable={false}
      style={
        Object {
          "backgroundColor": "#3743ab",
          "bottom": 0,
          "display": "flex",
          "height": 3,
          "position": "absolute",
          "transform": Array [
            Object {
              "translateX": 0,
            },
          ],
        }
      }
    >
      <View
        style={
          Object {
            "width": 0,
          }
        }
      />
    </View>
  </View>,
  <View
    collapsable={false}
    onMoveShouldSetResponder={[Function]}
    onMoveShouldSetResponderCapture={[Function]}
    onResponderEnd={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderReject={[Function]}
    onResponderRelease={[Function]}
    onResponderStart={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    onStartShouldSetResponderCapture={[Function]}
    style={
      Object {
        "alignItems": "stretch",
        "flex": 1,
        "flexDirection": "row",
        "transform": Array [
          Object {
            "translateX": 0,
          },
        ],
        "width": 1500,
      }
    }
    testID="tabView-test"
  >
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flex": 1,
          "flexDirection": "row",
          "width": 750,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "width": "100%",
          }
        }
        theme={
          Object {
            "colors": Object {
              "black": "#242424",
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "grey": "rgba(0, 0, 0, 0.54)",
                  "primary": "#2196f3",
                  "searchBg": "#dcdce1",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "default": Object {
                  "error": "#ff3b30",
                  "grey": "#7d7d7d",
                  "primary": "#007aff",
                  "searchBg": "#dcdce1",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "grey": "#7d7d7d",
                  "primary": "#007aff",
                  "searchBg": "#dcdce1",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
                "web": Object {
                  "error": "#ff190c",
                  "grey": "#393e42",
                  "primary": "#2089dc",
                  "searchBg": "#303337",
                  "secondary": "#ca71eb",
                  "success": "#52c41a",
                  "warning": "#faad14",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#ca71eb",
              "success": "#52c41a",
              "warning": "#faad14",
              "white": "#ffffff",
            },
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "height": "100%",
            }
          }
        >
          <RCTScrollView
            data={Array []}
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            viewabilityConfigCallbackPairs={Array []}
          >
            <RCTRefreshControl />
            <View />
          </RCTScrollView>
          <View
            style={
              Object {
                "alignSelf": "center",
                "position": "absolute",
                "top": 90,
              }
            }
          >
            <Image
              resizeMode="contain"
              source={
                Object {
                  "testUri": "../../../assests/images/nopatients.png",
                }
              }
              style={
                Object {
                  "width": 250,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "stretch",
          "flex": 1,
          "flexDirection": "row",
          "width": 750,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "white",
            "width": "100%",
          }
        }
        theme={
          Object {
            "colors": Object {
              "black": "#242424",
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "grey": "rgba(0, 0, 0, 0.54)",
                  "primary": "#2196f3",
                  "searchBg": "#dcdce1",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "default": Object {
                  "error": "#ff3b30",
                  "grey": "#7d7d7d",
                  "primary": "#007aff",
                  "searchBg": "#dcdce1",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "grey": "#7d7d7d",
                  "primary": "#007aff",
                  "searchBg": "#dcdce1",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
                "web": Object {
                  "error": "#ff190c",
                  "grey": "#393e42",
                  "primary": "#2089dc",
                  "searchBg": "#303337",
                  "secondary": "#ca71eb",
                  "success": "#52c41a",
                  "warning": "#faad14",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#ca71eb",
              "success": "#52c41a",
              "warning": "#faad14",
              "white": "#ffffff",
            },
          }
        }
      >
        <View
          style={
            Object {
              "backgroundColor": "white",
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            data={Array []}
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            refreshControl={
              <RefreshControlMock
                onRefresh={[Function]}
                refreshing={false}
              />
            }
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            viewabilityConfigCallbackPairs={Array []}
          >
            <RCTRefreshControl />
            <View />
          </RCTScrollView>
          <View
            style={
              Object {
                "alignSelf": "center",
                "position": "absolute",
                "top": 90,
              }
            }
          >
            <Image
              resizeMode="contain"
              source={
                Object {
                  "testUri": "../../../assests/images/nopatientreq.png",
                }
              }
              style={
                Object {
                  "width": 250,
                }
              }
            />
          </View>
        </View>
      </View>
    </View>
  </View>,
]
`;
